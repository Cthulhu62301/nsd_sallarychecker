// Имена файлов обычно даются по имени класса в этом файле
// Но при этом стиль именования файла может отличаться от стиля именования класса

// pragma once - это тот же хэдер гуард, но проще в написании
// его раньше не рекомендовали использовать, т к он не поддерживается старыми компиляторами
// но вряд ли у кого-то в наши дни появиться компилятор 2008 года
#pragma once

#include <iostream>
#include <fstream>
#include <chrono>
#include <string>
#include <ctime>

// Некоторые пишут элементы перечисления капсом, т к они - константы, но я здесь решил написать так, хз
enum LessonType
{
    trial = 0, // На самом деле, последующие элементы будут нумероваться по порядку автоматически
    lesson = 1, // Пронумерованы явно для наглядности (лучше явно не нумеровать, если не нужно изменять порядок нумерации)
    indiv = 2,
    count = 3, // Есть такая практика, последний элемент делать равным количеству элементов в перечислении (когда это полезно)
};

// Объявление класса и его членов
// Определения лежат в .cpp файле
// Чтобы определить какую-либо функцию-член, нужно обратиться к ней через оператор ::
// Например: void SalaryHandler::printLocalTime() { }
// Имена классов в UpperCamelCase
class SalaryHandler
{
// Сначала объявляются публичные члены (т к если ты пользовтель класса, то тебе важно только то,
// что ты можешь сделать с этим классом, тебя не волнует (не должна волновать) его внутренняя реализация)
public:
    // Имена функций (я хз кст, но почему-то в плюсах все говорят функция, не смотря на то, что она объявлена в классе)
    // в camelCase
    void printLocalTime();
    void writeUserLessonInfo();

private:
    // Константы объявляются перед функциями, именуются в UPPER_SNAKE_CASE
    // Вообще, их можно было сделать публичными, т к все равно их не изменишь
    // Но, если эти константы никогда не будут использоваться за пределами этого класса,
    // то лучше и вправду оставить их приватными
    const unsigned int TRIAL_COST { 500 };
    const unsigned int LESSON_COST { 350 };
    const unsigned int INDIV_COST { 450 };

    // Я сделал ее приватной, т к она используется только внутри класса и пользователю класса не нужна
    int writeLessonInfoToFile(std::string date, LessonType type);
};
